<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJWLEGiVig/dlYoQ65WKEOuVihDrlYoQ65WK
        EOuVihDrlYoQ65WKEOuVihDrlYoQ65WKEOuVihDrlYoQ65WKEOuVihDrlYoQ65WKEOuVihDrlYoQ65WL
        ENWWixBOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACVig8wlYoP/5aLEP+WixD/losQ/5aL
        EP+WixD/losQ/5aLEP+WixD/losQ/5aLEP+WixD/losQ/5aLEP+WixD/losQ/5aLEP+WixD/losQ/5aL
        EP+WixD/losQ/5WKEPWViw8SAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJWLEFyWixD/losQ7ZaL
        EFaWixBWlosQVpaLEFaWixBWlosQVpaLEFaWixBWlosQVpaLEFaWixBWlosQVpaLEFaWixBWlosQVpaL
        EFaWixBWlosQVpaLEFqWixD/losQ/5aLDzYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlosQXpaL
        EP+WihDjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAlosQCJaLEP+WixD/losQOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        8OPz//DH8AB4D/AAfB////5///////////8=
</value>
  </data>
</root>